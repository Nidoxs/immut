[{"title":"Draft","type":0,"sectionRef":"#","url":"/immut/api/Draft","content":"On this page Draft Drafts are the backbone of Immut. They allow you to interact with a table in a way which would normally mutate it, but immutably. Internally, a draft stores a reference to the original table and then clones that table as soon as you modify it in any way.","keywords":""},{"title":"Immut","type":0,"sectionRef":"#","url":"/immut/api/Immut","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"Immut","url":"/immut/api/Immut#functions","content":" "},{"title":"isDraftable​","type":1,"pageTitle":"Immut","url":"/immut/api/Immut#isDraftable","content":"&lt;/&gt; Immut.isDraftable(value: any) → boolean Checks if a value can be wrapped with a draft. Tables without metatables are the only draftable values.  "},{"title":"createDraft​","type":1,"pageTitle":"Immut","url":"/immut/api/Immut#createDraft","content":"&lt;/&gt; Immut.createDraft(base: table) → Draft  tip It's unlikely you'll need to use this unless you have a very specific use case. Try using produce instead! Create a new draft from the given table.  "},{"title":"isDraft​","type":1,"pageTitle":"Immut","url":"/immut/api/Immut#isDraft","content":"&lt;/&gt; Immut.isDraft(value: any) → boolean Checks if the given value is a draft.  "},{"title":"produce​","type":1,"pageTitle":"Immut","url":"/immut/api/Immut#produce","content":"&lt;/&gt; Immut.produce( base: table,-- any table, so long as it doesn't have a metatable recipe: (draft: Draft) → table ) → T The primary way to use Immut. Takes a table and a recipe function which is passed a draft that can be mutated, producing a new table with those changes made to it. Examples local state = { pets = { mittens = { type = &quot;cat&quot;, mood = &quot;lonely&quot;, }, } } -- mittens is lonely. let's get her a friend local newState = produce(state, function(draft) draft.pets.spot = { type = &quot;dog&quot;, mood = &quot;curious&quot;, } draft.pets.mittens.mood = &quot;happy&quot; end)   "},{"title":"remove​","type":1,"pageTitle":"Immut","url":"/immut/api/Immut#remove","content":"&lt;/&gt; Immut.remove( draft: {V}, number: number? ) → V? Draft-safe replacement for table.remove  "},{"title":"insert​","type":1,"pageTitle":"Immut","url":"/immut/api/Immut#insert","content":"&lt;/&gt; Immut.insert( draft: {V}, pos: number | V, value: V? ) → () Draft-safe replacement for table.insert  "},{"title":"finishDraft​","type":1,"pageTitle":"Immut","url":"/immut/api/Immut#finishDraft","content":"&lt;/&gt; Immut.finishDraft(draft: Draft) → table  tip It's unlikely you'll need to use this unless you have a very specific use case. Try using produce instead! Finalize a draft.  "},{"title":"original​","type":1,"pageTitle":"Immut","url":"/immut/api/Immut#original","content":"&lt;/&gt; Immut.original(draft: T) → () Returns the original table. You can use this to opt out of Immut for any table, like in cases where it may be more performant to use another method. "}]